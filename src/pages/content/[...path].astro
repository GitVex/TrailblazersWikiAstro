---
import {getCollection, render} from "astro:content";
import type {CollectionEntry} from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import {getSlugMap} from "../../../plugins/remark/util/remarkOfWikiLinks-utils";
import {search} from 'fast-fuzzy';
import Content from "../../components/Content"

export async function getStaticPaths() {
    const allContent = await getCollection("content");
    const slugMap = getSlugMap();

    let warns = 0

    const routes = allContent.map((content) => {
        let slug = content.id.split('/').slice(-1)[0];
        let route = slugMap[slug]?.route;

        if (!route) {
            const candidate = search(slug, Object.keys(slugMap))[0];
            // console.warn(`[WARN] No route found for slug: ${slug} - candidate: ${candidate}`);
            warns++;
            route = slugMap[candidate]?.route;
            slug = candidate;
        }

        const slugInfo = slugMap[slug];

        // Remove leading '/content' if present
        const path = route.replace(/^\/content/, '').split('/').filter(Boolean).join('/');

        // console.log(`[INFO] Generating static path for ${slug} -> ${path}`);

        return {
            params: {path},
            props: {content, title: slugInfo.name},
        };
    }).filter(Boolean); // Filter out null entries

    console.warn(`[WARN] Replaced ${warns} slug routes with a fuzzy candidate.`);

    return routes
}

// @ts-ignore
const {content, title} = Astro.props as { content: CollectionEntry<"content"> };
// console.log(content)
const slugMap = getSlugMap();
const slug = content.id.split('/').slice(-1)[0]

const renderResult = await render(content)
const Rendered = renderResult.Content
const frontmatter = {
    // @ts-ignore
    ...content.rendered?.metadata?.frontmatter,
    title
}
---


<BaseLayout frontmatter={{frontmatter}}>
    <main>
        <Content client:only="preact" slug={slug} slugInfo={slugMap[slug]}>
            <Rendered/>
        </Content>


        <div data-pagefind-body style="display: none;">
            <Rendered/>
        </div>
    </main>
</BaseLayout>

